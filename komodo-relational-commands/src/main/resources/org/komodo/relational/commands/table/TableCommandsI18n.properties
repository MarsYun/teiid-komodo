# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership. Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
#
# This library is free software =  you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation =  either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY =  without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library =  if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

addAccessPatternExamples = \
\t add-access-pattern accessPatternToAdd
addAccessPatternHelp = \t%s - creates an access pattern in a table.
addAccessPatternUsage = add-access-pattern <pattern-name>

addColumnExamples = \
\t add-column columnToAdd
addColumnHelp = \t%s - creates a column in a table.
addColumnUsage = add-column <column-name>

addForeignKeyExamples = \
\t add-foreign-key ForeignKeyToAdd /workspace/myVdb/aTable
addForeignKeyHelp = \t%s - creates a foreign key in a table.
addForeignKeyUsage = add-foreign-key <foreign-key-name> <path-to-table-reference>

addIndexExamples = \
\t add-index indexToAdd
addIndexHelp = \t%s - creates an index in a table.
addIndexUsage = add-index <index-name>

addPrimaryKeyExamples = \
\t add-primary-key myPk
addPrimaryKeyHelp = \t%s - creates a primary key in a table.
addPrimaryKeyUsage = add-primary-key <pk-name>

addUniqueConstraintExamples = \
\t add-unique-constraint constraintToAdd
addUniqueConstraintHelp = \t%s - creates a unique constraint in a table.
addUniqueConstraintUsage = add-unique-constraint <constraint-name>

deleteAccessPatternExamples = \
\t delete-access-pattern patternToDelete
deleteAccessPatternHelp = \t%s - deletes an access pattern from a table.
deleteAccessPatternUsage = delete-access-pattern <pattern-name>

deleteColumnExamples =  \
\t delete-column columnToDelete
deleteColumnHelp = \t%s - deletes a column from a table.
deleteColumnUsage = delete-column <column-name>

deleteForeignKeyExamples =  \
\t delete-foreign-key fkToDelete
deleteForeignKeyHelp = \t%s - deletes a ForeignKey from a Table.
deleteForeignKeyUsage = delete-foreign-key <foreignKey-name>

deleteIndexExamples =  \
\t delete-index indexToDelete
deleteIndexHelp = \t%s - deletes an index from a table.
deleteIndexUsage = delete-index <index-name>

deletePrimaryKeyExamples =  \
\t delete-primary-key
deletePrimaryKeyHelp = \t%s - deletes the primary key from a table.
deletePrimaryKeyUsage = delete-primary-key

deleteUniqueConstraintExamples =  \
\t delete-unique-constraint ucToDelete
deleteUniqueConstraintHelp = \t%s - deletes a unique constraint from a table.
deleteUniqueConstraintUsage = delete-unique-constraint <unique-constraint-name>

setTablePropertyExamples =  \
\t set-property updatable false
setTablePropertyHelp = \t%s - sets a table property value.
setTablePropertyUsage = set-property <property-name> <new-value>

showAccessPatternsExamples = \
\t show-access-patterns \n \
\t show-access-patterns a* b* c*
showAccessPatternsHelp = \t%s - lists the access patterns found in a table.
showAccessPatternsUsage = show-access-patterns [pattern1 pattern2 ...]

showColumnsExamples = \
\t show-columns \n \
\t show-columns a* b* c*
showColumnsHelp = \t%s - lists the columns found in a table.
showColumnsUsage = show-columns [pattern1 pattern2 ...]

showIndexesExamples = \
\t show-indexes \n \
\t show-indexes a* b* c*
showIndexesHelp = \t%s - lists the indexes found in a table.
showIndexesUsage = show-indexes [pattern1 pattern2 ...]

showUniqueConstraintsExamples = \
\t show-unique-constraints \n \
\t show-unique-constraints a* b* c*
showUniqueConstraintsHelp = \t%s - lists the unique constraints found in a table.
showUniqueConstraintsUsage = show-unique-constraints [pattern1 pattern2 ...]

unsetTablePropertyExamples = \
\t unset-property nameInSource
unsetTablePropertyHelp = \t%s - either removes the table property or sets it back to its default value.
unsetTablePropertyUsage = unset-property <property-name>

accessPatternAdded = Access pattern '%s' was successfully added.
columnAdded = Column '%s' was successfully added.
foreignKeyAdded = Foreign key '%s' was successfully added.
invalidTablePath = The '%s' path is not a valid table path.
accessPatternDeleted = Access pattern '%s' was successfully deleted.
accessPatternsHeader = Access patterns in model '%s':
columnDeleted = Column '%s' was successfully deleted.
columnsHeader = Columns in model '%s':
foreignKeyDeleted = ForeignKey '%s' was successfully deleted.
indexAdded = Index '%s' was successfully added.
indexDeleted = Index '%s' was successfully deleted.
indexesHeader = Indexes in model '%s':
invalidOnCommitPropertyValue = The value of the onCommitValue property '%s' is invalid.
invalidSchemaElementTypePropertyValue = The value of the schemaElementType property '%s' is invalid.
invalidTemporaryTableTypePropertyValue = The value of the temporaryTableType property '%s' is invalid.
matchingAccessPatternsHeader = Access patterns in model '%s' that match the specified pattern(s):
matchingColumnsHeader = Columns in model '%s' that match the specified pattern(s):
matchingIndexesHeader = Indexes in model '%s' that match the specified pattern(s):
matchingUniqueConstraintsHeader = Unique constraints in model '%s' that match the specified pattern(s):
missingAccessPatternName = An access pattern requires a name.
missingColumnName = A column requires a name.
missingForeignKeyName = A foreign key requires a name.
missingForeignKeyTableRefPath = An absolute path to the foreign key's table reference is required.
missingIndexName = An index requires a name.
missingPrimaryKeyName = A primary key requires a name.
missingUniqueConstraintName = A unique constraint requires a name.
noAccessPatterns = There are no access patterns defined in model '%s'.
noColumns = There are no columns defined in model '%s'.
noIndexes = There are no indexes defined in model '%s'.
noMatchingAccessPatterns = There are no access patterns defined in model '%s' that match the specified pattern(s).
noMatchingColumns = There are no columns defined in model '%s' that match the specified pattern(s).
noMatchingIndexes = There are no indexes defined in model '%s' that match the specified pattern(s).
noMatchingUniqueConstraints = There are no unique constraints defined in model '%s' that match the specified pattern(s).
noPkToRemove = The table does not have a primary key.
noUniqueConstraints = There are no unique constraints defined in model '%s'.
pkExistsCantAdd = The table already has a Primary key so '%s' cannot be added.
primaryKeyAdded = Primary key '%s' was successfully added.
primaryKeyDeleted = Primary key was successfully deleted.
uniqueConstraintAdded = Unique constraint '%s' was successfully added.
uniqueConstraintDeleted = Unique constraint '%s' was successfully deleted.
uniqueConstraintsHeader = Unique constraints in model '%s':
